{
  "name": "mamori-i-japan-api",
  "version": "0.1.0",
  "description": "REST API Server for Japanese Exposure Notification App to fight against COVID-19 a.k.a. \"まもりあいJapan\".",
  "author": {
    "name": "まもりあいJapan",
    "url": "https://github.com/mamori-i-japan"
  },
  "contributors": [
    "Daisuke Hirata <daisukihirata@gmail.com> (https://github.com/DaisukeHirata)",
    "Shogo Mitomo <shogo.mitomo@monstar-lab.com> (https://github.com/shogo-mitomo)",
    "Yash Murty <yashmurty@gmail.com> (https://github.com/yashmurty)"
  ],
  "private": false,
  "license": "BSD-2-Clause",
  "engines": {
    "node": "12.16.2"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "sls-offline": "npm run build && serverless offline start --useChildProcesses",
    "deploy:firebase:dev": "firebase deploy --project dev",
    "deploy:firebase:stg": "firebase deploy --project stg",
    "deploy:firebase:demo": "firebase deploy --project demo --except hosting",
    "deploy:dev": "npm run build && serverless create_domain --stage dev && serverless deploy --stage dev",
    "deploy:stg": "npm run build && serverless create_domain --stage stg && serverless deploy --stage stg",
    "deploy:demo": "npm run build && serverless create_domain --stage demo && serverless deploy --stage demo",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "ci:lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix --max-warnings 0",
    "ci:test:cov": "jest --coverage --ci --runInBand",
    "ci:test:e2e": "jest --config ./test/jest-e2e.json --ci --runInBand"
  },
  "dependencies": {
    "@hapi/joi": "^17.1.1",
    "@nestjs/common": "^7.0.0",
    "@nestjs/config": "^0.4.0",
    "@nestjs/core": "^7.0.0",
    "@nestjs/passport": "^7.0.0",
    "@nestjs/platform-express": "^7.0.0",
    "@nestjs/swagger": "^4.5.1",
    "aws-serverless-express": "^3.3.8",
    "class-transformer": "^0.3.1",
    "class-validator": "^0.11.1",
    "firebase-admin": "^8.10.0",
    "firebase-tools": "^8.1.1",
    "moment-timezone": "^0.5.28",
    "passport": "^0.4.1",
    "passport-custom": "^1.1.1",
    "passport-jwt": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^6.5.4",
    "swagger-ui-express": "^4.1.4",
    "uuid": "^8.0.0",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^7.0.0",
    "@nestjs/schematics": "^7.0.0",
    "@nestjs/testing": "^7.0.0",
    "@types/aws-lambda": "^8.10.47",
    "@types/aws-serverless-express": "^3.3.3",
    "@types/express": "^4.17.3",
    "@types/hapi__joi": "^16.0.12",
    "@types/jest": "25.1.4",
    "@types/moment-timezone": "^0.5.13",
    "@types/node": "^13.9.1",
    "@types/passport-jwt": "^3.0.3",
    "@types/supertest": "^2.0.8",
    "@typescript-eslint/eslint-plugin": "^2.23.0",
    "@typescript-eslint/parser": "^2.23.0",
    "axios": "^0.19.2",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-import": "^2.20.1",
    "jest": "^25.1.0",
    "prettier": "^1.19.1",
    "serverless": "^1.70.0",
    "serverless-deployment-bucket": "^1.1.2",
    "serverless-domain-manager": "^3.3.2",
    "serverless-layers": "^2.2.2",
    "serverless-offline": "^6.1.5",
    "serverless-prune-plugin": "^1.4.2",
    "supertest": "^4.0.2",
    "ts-jest": "25.2.1",
    "ts-loader": "^6.2.1",
    "ts-node": "^8.6.2",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
